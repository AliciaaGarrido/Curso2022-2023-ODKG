# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dOVLdFrKsJdp6t3NVlTxqds9VG-sgkCx

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

ns = Namespace("http://somewhere#")
from rdflib.plugins.sparql import prepareQuery
# TO DO
# Visualize the results
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s) 
print("SPARQL")
q1 = prepareQuery('''
  SELECT ?subclass WHERE { 
    ?subclass rdfs:subClassOf ns:Person. 
    }
  ''',
  initNs = { "ns": ns,
            "rdfs": RDFS}
)
for r in g.query(q1):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
for s,p,o in g.triples((None, RDF.type, ns.Person)):  
  print(s) 
print("---")
for s1,p1,o1 in g.triples((None, RDFS.subClassOf, ns.Person)): 
    for s2,p2,o2 in g.triples((None, RDF.type, s1)):
        print(s2) 
print("SPARQL")
# Visualize the results
q2 = prepareQuery('''
  SELECT ?person WHERE{
    ?subclass RDFS:subClassOf* ns:Person.
    ?person a ?subclass.
  }
  ''', 
  initNs = {
      "ns":ns,
      "RDFS":RDFS
  }
)
for r in g.query(q2):
  print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
#RDFLib
for s1,p1,o1 in g.triples((None, RDF.type, ns.Person)):  
  for s2,p2,o2 in g.triples((s1,None,None)):
    print(s2,p2,o2) 

print ("---")

for s1,p1,o1 in g.triples((None, RDFS.subClassOf, ns.Person)): 
    for s2,p2,o2 in g.triples((None, RDF.type, s1)):
      for s3,p3,o3 in g.triples((s2,None,None)):
        print(s3,p3,o3) 
# Visualize the results
q3 = prepareQuery("""
  SELECT ?subclass ?person ?property  WHERE{
    ?subclass RDFS:subClassOf* ns:Person.
    ?person a ?subclass.
    ?person ?property ?value.
  }
  """, initNs = {
      "ns":ns,
      "RDFS":RDFS
  }
)
print("SPARQL")
# Visualize the results
for r in g.query(q3):
  print(r.subclass, r.person, r.property)