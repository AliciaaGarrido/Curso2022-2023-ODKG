# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RCx9EOnjawYfPJMYlAI9dN2LjfKoTQHM

**Task 07: Querying RDF(s)**
"""

get_ipython().system('pip install rdflib')
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

ns = Namespace("http://somewhere#")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

print("RDFLib: ")

for s, _, _ in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)

print("\nSPARQL: ")

from rdflib.plugins.sparql import prepareQuery

q1 = prepareQuery(
        """
            SELECT ?s
            WHERE{
                ?s rdfs:subClassOf ns:Person .
            }
        """,
        initNs = {"rdfs":RDFS, "ns":ns})

for r in g.query(q1):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

print("RDFLib: ")

for s, _, _ in g.triples((None, RDF.type, ns.Person)):
  print(s)

for s1, _, _ in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s2, _, _ in g.triples((None, RDF.type, s1)):
    print(s2)

print("\nSPARQL: ")

from rdflib.plugins.sparql import prepareQuery

q2 = prepareQuery(
        """
            SELECT ?s
            WHERE{
                ?s a/rdfs:subClassOf* ns:Person
            }
        """,
        initNs = {"rdfs":RDFS, "ns":ns})

for r in g.query(q2):
  print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

print("RDFLib: ")

for s, p, o in g.triples((None, RDF.type, ns.Person)):
  for s0, p0, o0 in g.triples((s, None, None)):
      print(s0, p0, o0)

for s1, p1, o1 in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s2, p2, o2 in g.triples((None, RDF.type, s1)):
    for s3, p3, o3 in g.triples((s2, None, None)):
      print(s3, p3, o3)

print("\nSPARQL: ")

from rdflib.plugins.sparql import prepareQuery

q3 = prepareQuery(
        """
            SELECT ?s ?p ?o
            WHERE{
                ?s a/rdfs:subClassOf* ns:Person ;
                ?p ?o
            }
        """,
        initNs = {"rdfs":RDFS, "ns":ns})

for r in g.query(q3):
  print(r)